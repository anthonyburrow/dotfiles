#!/usr/bin/env bash

set -euo pipefail

colors_file="$HOME/.config/colors"
output_file="$HOME/.Xresources"

if [ ! -f "$colors_file" ]; then
    echo "❌ ERROR: colors file not found: $colors_file" >&2
    exit 1
fi

# Write static header
cat > "$output_file" <<'HEADER'
!! Xft
Xft.dpi: 96
Xft.antialias: true

!! Appearance
urxvt.termName: rxvt-unicode
urxvt.scrollBar: false

!! Font
URxvt*font: xft:DejaVu Sans Mono:size=12:hinting=true
URxvt*boldFont: xft:Source Code Pro:size=11:hinting=true
URxvt*italicFont: xft:Source Code Pro:style=Oblique:size=11:hinting=true
URxvt*boldItalicFont: xft:Source Code Pro:style=Bold Oblique:size=11:hinting=true
URxvt*letterSpace: 0

!! Colors
HEADER

translate_key() {
    case "$1" in
        COLOR_BACKGROUND) echo ".background" ;;
        COLOR_FOREGROUND) echo ".foreground" ;;
        COLOR_ACCENT0)    echo "color0" ;;
        COLOR_ACCENT1)    echo "color1" ;;
        *) echo "$1" ;;
    esac
}

while IFS= read -r line || [ -n "$line" ]; do
    line="${line#"${line%%[![:space:]]*}"}"
    [[ -z "$line" || "$line" == \#* ]] && continue

    key="${line%%=*}"
    val="${line#*=}"

    key="$(echo "$key" | tr -d '[:space:]')"
    val="$(echo "$val" | tr -d '[:space:]' | tr -d '"' | tr -d "'")"

    [[ -z "$key" || -z "$val" ]] && continue

    xkey="$(translate_key "$key")"

    echo "*${xkey}: ${val}" >> "$output_file"
done < "$colors_file"

echo "Generated $output_file and merged into Xresources."
