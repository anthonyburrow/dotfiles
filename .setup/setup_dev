#!/usr/bin/env bash
#
# Sets up a persistent fallback Python virtual environment
# Used by your bash function in ~/.bash_profile as the fallback interpreter.
#
# Location: ~/.dev/setup_dev

set -e  # exit on error

# === CONFIG ===
DEV_DIR="$HOME/dev"
VENV_DIR="$DEV_DIR/.venv"
DOTFILES_DIR="$(dirname "$(realpath "$0")")/.."
REQS_FILE="$DOTFILES_DIR/.dev/requirements.txt"

# === OUTPUT HELPERS ===
info() { echo -e "\033[1;34m[INFO]\033[0m $*"; }
success() { echo -e "\033[1;32m[SUCCESS]\033[0m $*"; }
warn() { echo -e "\033[1;33m[WARN]\033[0m $*"; }
error() { echo -e "\033[1;31m[ERROR]\033[0m $*"; }

# === MAIN ===
info "Setting up fallback Python environment..."
info "Target directory: $VENV_DIR"

# Create ~/dev if needed
mkdir -p "$DEV_DIR"

# Create venv if missing
if [ ! -d "$VENV_DIR" ]; then
    info "Creating virtual environment..."
    python -m venv "$VENV_DIR"
else
    warn "Virtual environment already exists. Skipping creation."
fi

# Upgrade pip/setuptools/wheel
info "Upgrading pip and core tools..."
"$VENV_DIR/bin/python" -m pip install --upgrade pip setuptools wheel

# Install requirements
if [ -f "$REQS_FILE" ]; then
    info "Installing packages from requirements.txt..."
    "$VENV_DIR/bin/pip" install -r "$REQS_FILE"
else
    warn "No requirements.txt found at $REQS_FILE"
fi

success "Fallback dev environment is ready!"
info "Path: $VENV_DIR"
